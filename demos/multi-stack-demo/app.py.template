#!/usr/bin/env python3
"""
AWS CDK Application Entry Point
"""

import os

from aws_cdk import App, Environment
from cdk_nag import AwsSolutionsChecks

from .config import get_config

# Import your stacks here
# from .stacks.network_stack import NetworkStack
# from .stacks.compute_stack import ComputeStack


def main():
    """Main application entry point"""
    app = App()
    
    # Get environment from context or environment variable
    env_name = app.node.try_get_context("environment") or os.getenv("CDK_ENVIRONMENT", "dev")
    
    # Load configuration for the environment
    config = get_config(env_name)
    
    # Define AWS environment
    aws_env = Environment(
        account=config["account"],
        region=config["region"]
    )
    
    # Create stacks
    # Example:
    # network_stack = NetworkStack(
    #     app, f"{env_name}-network-stack",
    #     config=config,
    #     env=aws_env
    # )
    
    # compute_stack = ComputeStack(
    #     app, f"{env_name}-compute-stack",
    #     config=config,
    #     env=aws_env
    # )
    # compute_stack.add_dependency(network_stack)
    
    # Apply CDK Nag for security and best practices validation
    AwsSolutionsChecks(app, verbose=True)
    
    app.synth()

if __name__ == "__main__":
    main()
