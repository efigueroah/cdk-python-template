# {module_name}

Aplicación AWS CDK Python para [describe el propósito de tu proyecto aquí].

## Descripción General

Este proyecto proporciona infraestructura como código usando AWS CDK con Python, siguiendo las mejores prácticas para seguridad, confiabilidad y mantenibilidad.

## Arquitectura

[Agregar diagrama de arquitectura y descripción aquí]

## Prerrequisitos

- Python 3.11+
- Node.js 18+
- AWS CDK CLI: `npm install -g aws-cdk`
- AWS CLI configurado con credenciales apropiadas

## Inicio Rápido

### 1. Instalar Dependencias

```bash
# Instalar dependencias de Python
pip install -r requirements.txt

# Instalar dependencias de desarrollo
pip install -r requirements-dev.txt
```

### 2. Configurar Ambientes

Este proyecto usa **configuración centralizada** con archivos externos TOML/JSON/YAML:

```bash
# Crear archivos de configuración de ejemplo
python -c "from src.{module_name}.config import create_sample_config_files; create_sample_config_files()"
```

Esto creará:
- `config/base.toml` - Configuración base común
- `config/env.dev.toml` - Configuración específica de desarrollo

Edita estos archivos para establecer tus configuraciones:

```toml
# config/base.toml
[aws]
account_id = "TU_ID_CUENTA"
region = "us-east-1"

[network]
vpc_cidr = "10.0.0.0/16"
nat_gateways = 1

[project]
name = "{module_name}"
```

```toml
# config/env.dev.toml
[project]
environment = "dev"

[aws]
region = "us-east-1"

[monitoring]
detailed_monitoring = false
```

### 3. Desplegar

```bash
# Desplegar a desarrollo
ENV=dev npm run deploy:env

# Desplegar a producción
ENV=prod npm run deploy:env
```

## Desarrollo

### Estructura del Proyecto

```
{module_name}/
├── src/{module_name}/        # Código principal de la aplicación
│   ├── app.py               # Punto de entrada de la app CDK
│   ├── config.py            # Configuraciones de ambiente
│   ├── constructs/          # Constructs CDK reutilizables
│   ├── stacks/              # Definiciones de stacks CDK
│   └── lambda/              # Código de funciones Lambda
├── tests/                    # Suite de pruebas
│   ├── unit/                # Pruebas unitarias
│   └── integration/         # Pruebas de integración
├── docs/                     # Documentación
├── assets/                   # Recursos y assets estáticos
└── .projenrc.py             # Configuración de Projen
```

### Comandos Disponibles

#### Desarrollo
```bash
npm run format          # Formatear código con black e isort
npm run lint           # Ejecutar linting (flake8, mypy, bandit)
npm run test           # Ejecutar suite de pruebas
npm run pre-commit     # Ejecutar hooks de pre-commit
```

#### Operaciones CDK
```bash
npm run synth          # Sintetizar app CDK
ENV=dev npm run synth:env     # Sintetizar para ambiente específico
ENV=dev npm run deploy:env    # Desplegar a ambiente específico
ENV=dev npm run destroy:env   # Destruir ambiente específico
ENV=dev npm run diff:env      # Mostrar diferencias para ambiente específico
```

#### Documentación
```bash
npm run docs:build     # Construir documentación
npm run docs:clean     # Limpiar construcción de documentación
npm run docs:open      # Abrir documentación en navegador
npm run diagram        # Generar diagrama de arquitectura
```

#### Seguridad
```bash
npm run security       # Ejecutar análisis de seguridad CDK Nag
```

### Pruebas

El proyecto incluye pruebas comprehensivas:

- **Pruebas Unitarias**: Prueban componentes individuales de forma aislada
- **Pruebas de Integración**: Prueban interacciones entre componentes
- **Pruebas de Infraestructura**: Validan la creación de recursos CDK

```bash
# Ejecutar todas las pruebas
npm run test

# Ejecutar con cobertura
npm run test -- --cov=src --cov-report=html

# Ejecutar archivo de prueba específico
npm run test tests/unit/test_stacks/test_network_stack.py
```

### Calidad de Código

El proyecto refuerza la calidad de código a través de:

- **Black**: Formateo de código
- **isort**: Ordenamiento de imports
- **flake8**: Aplicación de guía de estilo
- **mypy**: Verificación de tipos estática
- **bandit**: Escaneo de vulnerabilidades de seguridad
- **pre-commit**: Verificaciones automatizadas antes de commits

## Ambientes

### Desarrollo (dev)
- Propósito: Desarrollo y pruebas
- Recursos: Mínimos, optimizados para costo
- Monitoreo: Logging básico

### Producción (prod)
- Propósito: Cargas de trabajo de producción
- Recursos: Alta disponibilidad, optimizados para rendimiento
- Monitoreo: Dashboards comprehensivos y alertas

## Seguridad

Este proyecto implementa mejores prácticas de seguridad:

- **IAM**: Políticas de acceso de menor privilegio
- **Encriptación**: Datos encriptados en reposo y en tránsito
- **Red**: Subnets privadas, security groups, NACLs
- **Monitoreo**: Integración con CloudTrail y GuardDuty
- **Cumplimiento**: Reglas de validación CDK Nag

## Monitoreo y Observabilidad

- **CloudWatch**: Métricas, logs y dashboards
- **Alarmas**: Alertas automatizadas para métricas críticas
- **Trazabilidad**: Integración con X-Ray para trazabilidad distribuida
- **Health Checks**: Monitoreo de aplicación e infraestructura

## Contribuir

1. Hacer fork del repositorio
2. Crear una rama de feature: `git checkout -b feature/mi-feature`
3. Hacer cambios y agregar pruebas
4. Ejecutar verificaciones de calidad: `npm run lint && npm run test`
5. Hacer commit de cambios: `git commit -m "Agregar mi feature"`
6. Push a la rama: `git push origin feature/mi-feature`
7. Crear un Pull Request

## Solución de Problemas

### Problemas Comunes

#### CDK Bootstrap Requerido
```bash
# Hacer bootstrap de CDK en tu cuenta/región
cdk bootstrap aws://ID-CUENTA/REGION
```

#### Permiso Denegado
- Asegúrate de que tus credenciales AWS tengan permisos suficientes
- Verifica las políticas IAM para permisos de despliegue CDK

#### Stack Ya Existe
```bash
# Importar recursos existentes o eliminar stack conflictivo
cdk destroy NOMBRE-STACK
```

### Obtener Ayuda

- Revisa la [documentación](docs/_build/html/index.html)
- Consulta la [documentación de AWS CDK](https://docs.aws.amazon.com/cdk/)
- Abre un issue en el repositorio

## Licencia

Este proyecto está licenciado bajo la Licencia MIT - ver el archivo [LICENSE](LICENSE) para detalles.

## Reconocimientos

- Construido con [AWS CDK](https://aws.amazon.com/cdk/)
- Estructura de proyecto gestionada por [Projen](https://projen.io/)
- Validación de seguridad por [CDK Nag](https://github.com/cdklabs/cdk-nag)
- Template creado por [Euclides Figueroa](https://github.com/efigueroah)
